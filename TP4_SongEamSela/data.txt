Text  mining  techniques ( like  sentiment  analysis  or  concept  extraction ) extract  meaningful  information  from  everyday writing. Text often contain slang, sarcasm, inconsistent syntax, grammatical errors, double entendres, etc. Those create a problem  for  the  machine  algorithms  as  all  text  mining  techniques  require  correctly  structured  text  sentences  or documents. So, if you still want to implement an algorithm, someone needs to correct all writing errors and standardize word forms to make them more comparable. The best way to do that is with natural language processing tools.Natural language processing tools (NLP) help computers to successfully process large natural language corpora. In some way they teach computers how to read. There is a thin line between NLPand text mining and most people consider them synonyms, but there is a difference. While text mining discovers relevant information in the text by transforming it into data, the natural language processing transforms text with the use of linguistic analysis. Its’ ultimate goal is to accomplish human-like language processing.Text mining and NLP are commonly used together because one can get a better result if the text is somehow pre-processed and structured. For Python, there is an excellent NLP implementation: nltk package. You can use other packages or even better —implement your own algorithm! Further in text, I’ll explain some of the most helpful morphology and syntax tools and give you examples of how to use ntlk.